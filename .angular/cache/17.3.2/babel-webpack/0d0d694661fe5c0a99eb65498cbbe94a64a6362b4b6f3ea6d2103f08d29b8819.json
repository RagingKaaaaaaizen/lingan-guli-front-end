{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nconst _c0 = a0 => ({\n  \"is-invalid\": a0\n});\nfunction TransferComponent_option_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const dept_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", dept_r1.id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", dept_r1.name, \" \");\n  }\n}\nfunction TransferComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1, \" Please select a department. \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let TransferComponent = /*#__PURE__*/(() => {\n  class TransferComponent {\n    constructor(http) {\n      this.http = http;\n      this.employees = [];\n      this.departments = [];\n      this.employeeId = 0;\n      this.departmentId = 0;\n      this.message = '';\n    }\n    ngOnInit() {\n      this.http.get('/employees').subscribe(data => this.employees = data);\n      this.http.get('/departments').subscribe(data => this.departments = data);\n    }\n    transfer() {\n      if (!this.employeeId || !this.departmentId) {\n        this.message = 'Please select both employee and department.';\n        return;\n      }\n      this.http.post('/employees/transfer', {\n        employeeId: this.employeeId,\n        newDepartmentId: this.departmentId\n      }).subscribe({\n        next: res => this.message = 'Employee transferred successfully.',\n        error: err => this.message = 'Transfer failed: ' + err.message\n      });\n    }\n    static #_ = this.ɵfac = function TransferComponent_Factory(t) {\n      return new (t || TransferComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TransferComponent,\n      selectors: [[\"app-transfer\"]],\n      decls: 16,\n      vars: 7,\n      consts: [[1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [1, \"mb-3\"], [1, \"form-label\"], [\"name\", \"departmentId\", \"required\", \"\", 1, \"form-select\", 3, \"ngModelChange\", \"ngModel\", \"ngClass\"], [\"disabled\", \"\", \"selected\", \"\", 3, \"value\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [1, \"btn\", \"btn-primary\", \"me-2\", 3, \"click\"], [1, \"btn\", \"btn-secondary\", 3, \"click\"], [3, \"value\"], [1, \"invalid-feedback\"]],\n      template: function TransferComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n          i0.ɵɵtext(2, \"Transfer Employee\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 2)(4, \"div\", 3)(5, \"label\", 4);\n          i0.ɵɵtext(6, \"New Department\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"select\", 5);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function TransferComponent_Template_select_ngModelChange_7_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.departmentId, $event) || (ctx.departmentId = $event);\n            return $event;\n          });\n          i0.ɵɵelementStart(8, \"option\", 6);\n          i0.ɵɵtext(9, \"Select department\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(10, TransferComponent_option_10_Template, 2, 2, \"option\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(11, TransferComponent_div_11_Template, 2, 0, \"div\", 8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"button\", 9);\n          i0.ɵɵlistener(\"click\", function TransferComponent_Template_button_click_12_listener() {\n            return ctx.transfer();\n          });\n          i0.ɵɵtext(13, \"Transfer\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"button\", 10);\n          i0.ɵɵlistener(\"click\", function TransferComponent_Template_button_click_14_listener() {\n            return ctx.cancel();\n          });\n          i0.ɵɵtext(15, \"Cancel\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(7);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.departmentId);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c0, ctx.submitted && !ctx.departmentId));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"value\", \"\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngForOf\", ctx.departments);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.submitted && !ctx.departmentId);\n        }\n      },\n      dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.RequiredValidator],\n      encapsulation: 2\n    });\n  }\n  return TransferComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}